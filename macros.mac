write macro string, lgsir
local writeloop
	mov bx, 0
	mov si,0
	mov cx, lgsir
writeloop:
	mov dl, string[si]
	mov ah, 2
	int 21h
	inc si
	loop writeloop
endm

checknr macro nr
	cmp nr, 30h
	jnge error1
	cmp nr, 39h
	jnle error1
endm

processreal macro realpart
local procloop
	cmp cx, 0
	je nextlabel
procloop:
	mov bx, 0	
	checknr realpart[si]
	sub realpart[si], 30h
	mov bl, realpart[si]
	mov floatnumber, bx
	fild floatnumber
	fmul ST(0), ST(3)
	fld ten
	fmulp ST(4)
	fadd 
	dec si
	loop procloop
endm

processfloat macro floatpart
local flloop
	cmp cx, 0
	je contproc
flloop:
	mov bx, 0
	checknr fractpart[si]
	sub fractpart[si], 30h
	mov bl, fractpart[si]
	mov floatnumber, bx
	fild floatnumber
	fmul ST(0), ST(3)
	fld ten
	fdivp ST(4), ST(0)
	fadd
	inc si
	loop flloop
endm

emptyarr macro arr, lgarr
local arrloop
	mov cx, lgarr
	mov si, 0
arrloop:
	mov arr[si], 0
	inc si
	loop arrloop
endm

realproc macro 
	mov cx, 10
	mov si, lganswerreal
realloop:	
	fld st(2)
	fld dividend
	fld st(3)
	fmul
	fld ten
	fdiv
	fdiv
	fist anotherfloat
	cmp anotherfloat, 0
	je afterreal
	fprem
	fld st(0)
	frndint
	fistp floatnumber
	mov ax, floatnumber
	add ax, 30h
	mov answerreal[si], al
	inc si
	fld st(3)
	ffree st(4)
	fld st(3)
	ffree st(4)
	fld st(3)
	ffree st(4)
	ffree st(3)
	fmul
	fld ten
	loop realloop
endm

fractproc macro
fractionloop:
	fld ten
	fld st(2)
	fld st(2)
	fmul
	fst placeholder
	mov bl, iterator	
	fprem
contfractloop:	
	mov iterator, bl
	fld st(0)
	frndint 
	fistp floatnumber
	cmp floatnumber, 0
	je afterfract
	mov ax, floatnumber
	add ax, 30h
	mov answerfract[si], al
	inc si
	fld st(3)
	ffree st(4)
	fld st(3)
	ffree st(4)
	ffree st(3)
	ffree st(2)
	fld ten 
	fmul
	ffree st(2)
	inc iterator
	loop fractionloop
endm

invreal macro
invertreal:
	cmp answerreal[si], 35h
	jnge nodecrease
decrease:
	dec answerreal[si + 1]
nodecrease:
	mov bl, answerreal[si]
	mov newanswerreal[di], bl
	inc si
	dec di
	loop invertreal
endm

catreal macro
concatreal:
	mov bl, newanswerreal[si]
	mov finalanswer[di], bl
	inc di
	inc lgfinalanswer
	inc si
	loop concatreal
endm

catfract macro
concatfract:
	mov bl, answerfract[si]
	mov finalanswer[di], bl
	inc si
	inc di
	inc lgfinalanswer
	loop concatfract
endm